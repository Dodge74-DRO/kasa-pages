{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import Error from'../Error/Error';import DataLocation from'../../datas/locations.json';import Logement from'../../components/Logement/Logement';// Page Location\n// récupère les éléments d'un logement pour affichage en plein écran\n// - appel de la fonction LOGEMENT en mode FULL\nimport{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Location(){const[location,setLocation]=useState(null);const{id}=useParams();// Récupère l'id du logement dans l'url (référence HREF créer dans le composant CARD)\n// utilisation HOOK REACT pour futur FETCH lorsque le BACKEND sera opérationnel\nuseEffect(()=>{// Récupère les infos du logement selon l'id transmis\nconst data=DataLocation.find(location=>location.id===id);//rechercher dans le tableau la location choisie\nif(data){// si existe\nsetLocation(data);}else{setLocation(null);// reinitialisation de la zone si pas trouvé !\n}},[id]);// useEffect se ré-exécutera si ID change\nif(!location){// LOCATION.JSX Si l'id n'existe pas, affiche la page d'erreur\nreturn/*#__PURE__*/_jsx(Error,{});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Logement,{modeDisplay:\"full\",location:location})});}","map":{"version":3,"names":["React","useState","useEffect","useParams","Error","DataLocation","Logement","jsx","_jsx","Fragment","_Fragment","Location","location","setLocation","id","data","find","children","modeDisplay"],"sources":["C:/_site_HTML_CSS/kasa-pages/src/pages/Location/Location.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Error from '../Error/Error';\nimport DataLocation from '../../datas/locations.json';\nimport Logement from '../../components/Logement/Logement';\n\n\n// Page Location\n// récupère les éléments d'un logement pour affichage en plein écran\n// - appel de la fonction LOGEMENT en mode FULL\n\nexport default function Location() {\n   const [location, setLocation] = useState(null);\n   const { id } = useParams(); // Récupère l'id du logement dans l'url (référence HREF créer dans le composant CARD)\n   // utilisation HOOK REACT pour futur FETCH lorsque le BACKEND sera opérationnel\n   useEffect(() => {  // Récupère les infos du logement selon l'id transmis\n      const data = DataLocation.find(location => location.id === id); //rechercher dans le tableau la location choisie\n      if (data) {                                                     // si existe\n         setLocation(data);\n      } else {\n         setLocation(null);                                              // reinitialisation de la zone si pas trouvé !\n      }\n   }, [id]);                                                          // useEffect se ré-exécutera si ID change\n\n   if (!location) { // LOCATION.JSX Si l'id n'existe pas, affiche la page d'erreur\n      return (<Error />);\n   }\n\n   return (\n      <>\n         <Logement modeDisplay=\"full\" location={location} />\n      </>\n   );\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,MAAO,CAAAC,QAAQ,KAAM,oCAAoC,CAGzD;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEA,cAAe,SAAS,CAAAC,QAAQA,CAAA,CAAG,CAChC,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAAEa,EAAG,CAAC,CAAGX,SAAS,CAAC,CAAC,CAAE;AAC5B;AACAD,SAAS,CAAC,IAAM,CAAG;AAChB,KAAM,CAAAa,IAAI,CAAGV,YAAY,CAACW,IAAI,CAACJ,QAAQ,EAAIA,QAAQ,CAACE,EAAE,GAAKA,EAAE,CAAC,CAAE;AAChE,GAAIC,IAAI,CAAE,CAAsD;AAC7DF,WAAW,CAACE,IAAI,CAAC,CACpB,CAAC,IAAM,CACJF,WAAW,CAAC,IAAI,CAAC,CAA+C;AACnE,CACH,CAAC,CAAE,CAACC,EAAE,CAAC,CAAC,CAA2D;AAEnE,GAAI,CAACF,QAAQ,CAAE,CAAE;AACd,mBAAQJ,IAAA,CAACJ,KAAK,GAAE,CAAC,CACpB,CAEA,mBACGI,IAAA,CAAAE,SAAA,EAAAO,QAAA,cACGT,IAAA,CAACF,QAAQ,EAACY,WAAW,CAAC,MAAM,CAACN,QAAQ,CAAEA,QAAS,CAAE,CAAC,CACpD,CAAC,CAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}