{"ast":null,"code":"var _jsxFileName = \"C:\\\\_site_HTML_CSS\\\\kasa-pages\\\\src\\\\pages\\\\Location\\\\Location.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Error from '../Error/Error';\nimport DataLocation from '../../datas/locations.json';\nimport Logement from '../../components/Logement/Logement';\n\n// Page Location\n// récupère les éléments d'un logement pour affichage en plein écran\n// - appel de la fonction LOGEMENT en mode FULL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Location() {\n  _s();\n  const [location, setLocation] = useState(null);\n  const {\n    id\n  } = useParams(); // Récupère l'id du logement dans l'url (référence HREF créer dans le composant CARD)\n  // utilisation HOOK REACT pour futur FETCH lorsque le BACKEND sera opérationnel\n  useEffect(() => {\n    // Récupère les infos du logement selon l'id transmis\n    const data = DataLocation.find(location => location.id === id); //rechercher dans le tableau la location choisie\n    if (data) {\n      // si existe\n      setLocation(data);\n    } else {\n      setLocation(null); // reinitialisation de la zone si pas trouvé !\n    }\n  }, [id]); // useEffect se ré-exécutera si ID change\n\n  if (!location) {\n    // LOCATION.JSX Si l'id n'existe pas, affiche la page d'erreur\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Logement, {\n      modeDisplay: \"full\",\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n}\n_s(Location, \"GyaBS7qiWZX2rDRyBsL1SyHCY7I=\", false, function () {\n  return [useParams];\n});\n_c = Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Error","DataLocation","Logement","jsxDEV","_jsxDEV","Fragment","_Fragment","Location","_s","location","setLocation","id","data","find","fileName","_jsxFileName","lineNumber","columnNumber","children","modeDisplay","_c","$RefreshReg$"],"sources":["C:/_site_HTML_CSS/kasa-pages/src/pages/Location/Location.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Error from '../Error/Error';\nimport DataLocation from '../../datas/locations.json';\nimport Logement from '../../components/Logement/Logement';\n\n\n// Page Location\n// récupère les éléments d'un logement pour affichage en plein écran\n// - appel de la fonction LOGEMENT en mode FULL\n\nexport default function Location() {\n   const [location, setLocation] = useState(null);\n   const { id } = useParams(); // Récupère l'id du logement dans l'url (référence HREF créer dans le composant CARD)\n   // utilisation HOOK REACT pour futur FETCH lorsque le BACKEND sera opérationnel\n   useEffect(() => {  // Récupère les infos du logement selon l'id transmis\n      const data = DataLocation.find(location => location.id === id); //rechercher dans le tableau la location choisie\n      if (data) {                                                     // si existe\n         setLocation(data);\n      } else {\n         setLocation(null);                                              // reinitialisation de la zone si pas trouvé !\n      }\n   }, [id]);                                                          // useEffect se ré-exécutera si ID change\n\n   if (!location) { // LOCATION.JSX Si l'id n'existe pas, affiche la page d'erreur\n      return (<Error />);\n   }\n\n   return (\n      <>\n         <Logement modeDisplay=\"full\" location={location} />\n      </>\n   );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,QAAQ,MAAM,oCAAoC;;AAGzD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM;IAAEc;EAAG,CAAC,GAAGZ,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B;EACAD,SAAS,CAAC,MAAM;IAAG;IAChB,MAAMc,IAAI,GAAGX,YAAY,CAACY,IAAI,CAACJ,QAAQ,IAAIA,QAAQ,CAACE,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC;IAChE,IAAIC,IAAI,EAAE;MAAsD;MAC7DF,WAAW,CAACE,IAAI,CAAC;IACpB,CAAC,MAAM;MACJF,WAAW,CAAC,IAAI,CAAC,CAAC,CAA8C;IACnE;EACH,CAAC,EAAE,CAACC,EAAE,CAAC,CAAC,CAAC,CAA0D;;EAEnE,IAAI,CAACF,QAAQ,EAAE;IAAE;IACd,oBAAQL,OAAA,CAACJ,KAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;EAEA,oBACGb,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACGd,OAAA,CAACF,QAAQ;MAACiB,WAAW,EAAC,MAAM;MAACV,QAAQ,EAAEA;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACpD,CAAC;AAET;AAACT,EAAA,CAtBuBD,QAAQ;EAAA,QAEdR,SAAS;AAAA;AAAAqB,EAAA,GAFHb,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}